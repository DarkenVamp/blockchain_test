{
  "abi": [
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uid",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "energy_amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uid",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "energy_amount",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uid",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "updateEnergy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Users.sol"
  },
  "ast": {
    "absolutePath": "contracts/Users.sol",
    "exportedSymbols": {
      "User": [
        129
      ],
      "Users": [
        241
      ]
    },
    "id": 242,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 124,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:31:1"
      },
      {
        "canonicalName": "User",
        "id": 129,
        "members": [
          {
            "constant": false,
            "id": 126,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "95:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "88:11:1",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 125,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "88:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 128,
            "mutability": "mutable",
            "name": "energy_amount",
            "nameLocation": "113:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 129,
            "src": "105:21:1",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 127,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "105:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "User",
        "nameLocation": "77:4:1",
        "nodeType": "StructDefinition",
        "scope": 242,
        "src": "70:59:1",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Users",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241
        ],
        "name": "Users",
        "nameLocation": "140:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 134,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "185:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "152:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
              "typeString": "mapping(address => struct User)"
            },
            "typeName": {
              "id": 133,
              "keyType": {
                "id": 130,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "160:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "152:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
                "typeString": "mapping(address => struct User)"
              },
              "valueType": {
                "id": 132,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 131,
                  "name": "User",
                  "nameLocations": [
                    "171:4:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "171:4:1"
                },
                "referencedDeclaration": 129,
                "src": "171:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$129_storage_ptr",
                  "typeString": "struct User"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 138,
            "mutability": "mutable",
            "name": "inserted",
            "nameLocation": "229:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "196:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 137,
              "keyType": {
                "id": 135,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 136,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "215:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 141,
            "mutability": "mutable",
            "name": "keys",
            "nameLocation": "261:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "243:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 139,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "243:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 140,
              "nodeType": "ArrayTypeName",
              "src": "243:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "335:37:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 148,
                      "name": "inserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "352:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 150,
                    "indexExpression": {
                      "id": 149,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "361:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "352:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 147,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "345:20:1"
                }
              ]
            },
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nameLocation": "281:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "302:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "294:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:13:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "329:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "328:6:1"
            },
            "scope": 241,
            "src": "272:100:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "491:146:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "509:18:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 164,
                              "name": "uid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "523:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 163,
                            "name": "isRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "510:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "510:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "501:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "501:27:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 169,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "538:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
                          "typeString": "mapping(address => struct User storage ref)"
                        }
                      },
                      "id": 171,
                      "indexExpression": {
                        "id": 170,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "544:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "538:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$129_storage",
                        "typeString": "struct User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 173,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "556:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 174,
                          "name": "energy_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "562:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 172,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "551:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$129_storage_ptr_$",
                          "typeString": "type(struct User storage pointer)"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "551:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$129_memory_ptr",
                        "typeString": "struct User memory"
                      }
                    },
                    "src": "538:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$129_storage",
                      "typeString": "struct User storage ref"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "538:38:1"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 178,
                        "name": "inserted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "586:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 180,
                      "indexExpression": {
                        "id": 179,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "595:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "586:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "586:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "586:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "626:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 184,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "616:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "621:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "616:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "616:14:1"
                }
              ]
            },
            "functionSelector": "fc0d1b84",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "387:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "413:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "405:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "440:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "426:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "energy_amount",
                  "nameLocation": "462:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "454:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:86:1"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:1"
            },
            "scope": 241,
            "src": "378:259:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "707:28:1",
              "statements": [
                {
                  "expression": {
                    "id": 197,
                    "name": "keys",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 141,
                    "src": "724:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 196,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "717:11:1"
                }
              ]
            },
            "functionSelector": "e2842d79",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllUsers",
            "nameLocation": "652:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:2:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "689:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 193,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "689:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 194,
                    "nodeType": "ArrayTypeName",
                    "src": "689:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:18:1"
            },
            "scope": 241,
            "src": "643:92:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "807:70:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 210,
                            "name": "uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "838:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 209,
                          "name": "isRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "825:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "825:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "817:26:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 214,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "860:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
                        "typeString": "mapping(address => struct User storage ref)"
                      }
                    },
                    "id": 216,
                    "indexExpression": {
                      "id": 215,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "866:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "860:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$129_storage",
                      "typeString": "struct User storage ref"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 217,
                  "nodeType": "Return",
                  "src": "853:17:1"
                }
              ]
            },
            "functionSelector": "6f77926b",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUser",
            "nameLocation": "750:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "766:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "758:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:13:1"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "794:11:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$129_memory_ptr",
                    "typeString": "struct User"
                  },
                  "typeName": {
                    "id": 205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 204,
                      "name": "User",
                      "nameLocations": [
                        "794:4:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 129,
                      "src": "794:4:1"
                    },
                    "referencedDeclaration": 129,
                    "src": "794:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$129_storage_ptr",
                      "typeString": "struct User"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:13:1"
            },
            "scope": 241,
            "src": "741:136:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "943:86:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "974:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 227,
                          "name": "isRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "961:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "961:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "953:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "953:26:1"
                },
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 232,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "989:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$129_storage_$",
                            "typeString": "mapping(address => struct User storage ref)"
                          }
                        },
                        "id": 234,
                        "indexExpression": {
                          "id": 233,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "995:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "989:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$129_storage",
                          "typeString": "struct User storage ref"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1000:13:1",
                      "memberName": "energy_amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 128,
                      "src": "989:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 236,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "1016:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "989:33:1"
                }
              ]
            },
            "functionSelector": "5d1a0500",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateEnergy",
            "nameLocation": "892:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "913:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "905:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "926:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "918:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:29:1"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:1"
            },
            "scope": 241,
            "src": "883:146:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 242,
        "src": "131:900:1",
        "usedErrors": []
      }
    ],
    "src": "37:995:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506106a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635d1a0500146100515780636f77926b14610066578063e2842d791461008f578063fc0d1b84146100a4575b600080fd5b61006461005f36600461034b565b6100b7565b005b610079610074366004610375565b6100fb565b6040516100869190610397565b60405180910390f35b6100976101f9565b60405161008691906103f8565b6100646100b236600461045b565b61025b565b6001600160a01b03821660009081526001602052604090205460ff166100dc57600080fd5b6001600160a01b03909116600090815260208190526040902060010155565b6040805180820190915260608152600060208201526001600160a01b03821660009081526001602052604090205460ff1661013557600080fd5b6001600160a01b03821660009081526020819052604090819020815180830190925280548290829061016690610526565b80601f016020809104026020016040519081016040528092919081815260200182805461019290610526565b80156101df5780601f106101b4576101008083540402835291602001916101df565b820191906000526020600020905b8154815290600101906020018083116101c257829003601f168201915b505050505081526020016001820154815250509050919050565b6060600280548060200260200160405190810160405280929190818152602001828054801561025157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610233575b5050505050905090565b6001600160a01b03831660009081526001602052604090205460ff161561028157600080fd5b60408051808201825283815260208082018490526001600160a01b03861660009081529081905291909120815181906102ba90826105af565b506020918201516001918201556001600160a01b0390941660008181529185905260408220805460ff1916861790556002805495860181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b0319169093179092555050565b80356001600160a01b038116811461034657600080fd5b919050565b6000806040838503121561035e57600080fd5b6103678361032f565b946020939093013593505050565b60006020828403121561038757600080fd5b6103908261032f565b9392505050565b600060208083528351604082850152805180606086015260005b818110156103cd578281018401518682016080015283016103b1565b506000608082870101528286015160408601526080601f19601f830116860101935050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156104395783516001600160a01b031683529284019291840191600101610414565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561047057600080fd5b6104798461032f565b9250602084013567ffffffffffffffff8082111561049657600080fd5b818601915086601f8301126104aa57600080fd5b8135818111156104bc576104bc610445565b604051601f8201601f19908116603f011681019083821181831017156104e4576104e4610445565b816040528281528960208487010111156104fd57600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b600181811c9082168061053a57607f821691505b60208210810361055a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105aa57600081815260208120601f850160051c810160208610156105875750805b601f850160051c820191505b818110156105a657828155600101610593565b5050505b505050565b815167ffffffffffffffff8111156105c9576105c9610445565b6105dd816105d78454610526565b84610560565b602080601f83116001811461061257600084156105fa5750858301515b600019600386901b1c1916600185901b1785556105a6565b600085815260208120601f198616915b8281101561064157888601518255948401946001909101908401610622565b508582101561065f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220ef15307437b93291186312fbd808e09abcd82a2034d5579100a652b86038131864736f6c63430008110033",
  "bytecodeSha1": "483278cd589d36f683423de90cd17abbb55c051e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Users",
  "coverageMap": {
    "branches": {
      "1": {
        "Users.register": {
          "10": [
            509,
            527,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Users.getAllUsers": {
          "5": [
            717,
            728
          ]
        },
        "Users.getUser": {
          "3": [
            817,
            843
          ],
          "4": [
            853,
            870
          ]
        },
        "Users.isRegistered": {
          "0": [
            345,
            365
          ]
        },
        "Users.register": {
          "6": [
            501,
            528
          ],
          "7": [
            538,
            576
          ],
          "8": [
            586,
            606
          ],
          "9": [
            616,
            630
          ]
        },
        "Users.updateEnergy": {
          "1": [
            953,
            979
          ],
          "2": [
            989,
            1022
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80635d1a0500146100515780636f77926b14610066578063e2842d791461008f578063fc0d1b84146100a4575b600080fd5b61006461005f36600461034b565b6100b7565b005b610079610074366004610375565b6100fb565b6040516100869190610397565b60405180910390f35b6100976101f9565b60405161008691906103f8565b6100646100b236600461045b565b61025b565b6001600160a01b03821660009081526001602052604090205460ff166100dc57600080fd5b6001600160a01b03909116600090815260208190526040902060010155565b6040805180820190915260608152600060208201526001600160a01b03821660009081526001602052604090205460ff1661013557600080fd5b6001600160a01b03821660009081526020819052604090819020815180830190925280548290829061016690610526565b80601f016020809104026020016040519081016040528092919081815260200182805461019290610526565b80156101df5780601f106101b4576101008083540402835291602001916101df565b820191906000526020600020905b8154815290600101906020018083116101c257829003601f168201915b505050505081526020016001820154815250509050919050565b6060600280548060200260200160405190810160405280929190818152602001828054801561025157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610233575b5050505050905090565b6001600160a01b03831660009081526001602052604090205460ff161561028157600080fd5b60408051808201825283815260208082018490526001600160a01b03861660009081529081905291909120815181906102ba90826105af565b506020918201516001918201556001600160a01b0390941660008181529185905260408220805460ff1916861790556002805495860181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b0319169093179092555050565b80356001600160a01b038116811461034657600080fd5b919050565b6000806040838503121561035e57600080fd5b6103678361032f565b946020939093013593505050565b60006020828403121561038757600080fd5b6103908261032f565b9392505050565b600060208083528351604082850152805180606086015260005b818110156103cd578281018401518682016080015283016103b1565b506000608082870101528286015160408601526080601f19601f830116860101935050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156104395783516001600160a01b031683529284019291840191600101610414565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561047057600080fd5b6104798461032f565b9250602084013567ffffffffffffffff8082111561049657600080fd5b818601915086601f8301126104aa57600080fd5b8135818111156104bc576104bc610445565b604051601f8201601f19908116603f011681019083821181831017156104e4576104e4610445565b816040528281528960208487010111156104fd57600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b600181811c9082168061053a57607f821691505b60208210810361055a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105aa57600081815260208120601f850160051c810160208610156105875750805b601f850160051c820191505b818110156105a657828155600101610593565b5050505b505050565b815167ffffffffffffffff8111156105c9576105c9610445565b6105dd816105d78454610526565b84610560565b602080601f83116001811461061257600084156105fa5750858301515b600019600386901b1c1916600185901b1785556105a6565b600085815260208120601f198616915b8281101561064157888601518255948401946001909101908401610622565b508582101561065f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220ef15307437b93291186312fbd808e09abcd82a2034d5579100a652b86038131864736f6c63430008110033",
  "deployedSourceMap": "131:900:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:146;;;;;;:::i;:::-;;:::i;:::-;;741:136;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:92;;;:::i;:::-;;;;;;;:::i;378:259::-;;;;;;:::i;:::-;;:::i;883:146::-;-1:-1:-1;;;;;352:13:1;;329:4;352:13;;;:8;:13;;;;;;;;953:26;;;;;;-1:-1:-1;;;;;989:10:1;;;:5;:10;;;;;;;;;;:24;;:33;883:146::o;741:136::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;352:13:1;;329:4;352:13;;;:8;:13;;;;;;;;817:26;;;;;;-1:-1:-1;;;;;860:10:1;;:5;:10;;;;;;;;;;;;853:17;;;;;;;;;;;;860:10;;853:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:136;;;:::o;643:92::-;689:16;724:4;717:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;717:11:1;;;;;;;;;;;;;;;;;;;;;;;643:92;:::o;378:259::-;-1:-1:-1;;;;;352:13:1;;329:4;352:13;;;:8;:13;;;;;;;;509:18;501:27;;;;;;551:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;538:10:1;;-1:-1:-1;538:10:1;;;;;;;;;;;:38;;:10;;:38;;:10;:38;:::i;:::-;-1:-1:-1;538:38:1;;;;;;;;;;-1:-1:-1;;;;;586:13:1;;;;;;;;;;;;;;:20;;-1:-1:-1;;586:20:1;;;;;616:4;:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;616:14:1;;;;;;;-1:-1:-1;;378:259:1:o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:2:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:2:o;642:729::-;776:4;805:2;834;823:9;816:21;872:6;866:13;915:4;910:2;899:9;895:18;888:32;949:12;943:19;998:6;993:2;982:9;978:18;971:34;1023:1;1033:147;1047:6;1044:1;1041:13;1033:147;;;1143:20;;;1139:29;;1133:36;1108:17;;;1127:3;1104:27;1097:73;1062:10;;1033:147;;;1037:3;1230:1;1224:3;1215:6;1204:9;1200:22;1196:32;1189:43;1288:2;1280:6;1276:15;1270:22;1263:4;1252:9;1248:20;1241:52;1361:3;1354:2;1350:7;1345:2;1337:6;1333:15;1329:29;1318:9;1314:45;1310:55;1302:63;;;;;642:729;;;;:::o;1376:658::-;1547:2;1599:21;;;1669:13;;1572:18;;;1691:22;;;1518:4;;1547:2;1770:15;;;;1744:2;1729:18;;;1518:4;1813:195;1827:6;1824:1;1821:13;1813:195;;;1892:13;;-1:-1:-1;;;;;1888:39:2;1876:52;;1983:15;;;;1948:12;;;;1924:1;1842:9;1813:195;;;-1:-1:-1;2025:3:2;;1376:658;-1:-1:-1;;;;;;1376:658:2:o;2039:127::-;2100:10;2095:3;2091:20;2088:1;2081:31;2131:4;2128:1;2121:15;2155:4;2152:1;2145:15;2171:1064;2258:6;2266;2274;2327:2;2315:9;2306:7;2302:23;2298:32;2295:52;;;2343:1;2340;2333:12;2295:52;2366:29;2385:9;2366:29;:::i;:::-;2356:39;;2446:2;2435:9;2431:18;2418:32;2469:18;2510:2;2502:6;2499:14;2496:34;;;2526:1;2523;2516:12;2496:34;2564:6;2553:9;2549:22;2539:32;;2609:7;2602:4;2598:2;2594:13;2590:27;2580:55;;2631:1;2628;2621:12;2580:55;2667:2;2654:16;2689:2;2685;2682:10;2679:36;;;2695:18;;:::i;:::-;2770:2;2764:9;2738:2;2824:13;;-1:-1:-1;;2820:22:2;;;2844:2;2816:31;2812:40;2800:53;;;2868:18;;;2888:22;;;2865:46;2862:72;;;2914:18;;:::i;:::-;2954:10;2950:2;2943:22;2989:2;2981:6;2974:18;3029:7;3024:2;3019;3015;3011:11;3007:20;3004:33;3001:53;;;3050:1;3047;3040:12;3001:53;3106:2;3101;3097;3093:11;3088:2;3080:6;3076:15;3063:46;3151:1;3146:2;3141;3133:6;3129:15;3125:24;3118:35;3172:6;3162:16;;;;;;;3225:2;3214:9;3210:18;3197:32;3187:42;;2171:1064;;;;;:::o;3240:380::-;3319:1;3315:12;;;;3362;;;3383:61;;3437:4;3429:6;3425:17;3415:27;;3383:61;3490:2;3482:6;3479:14;3459:18;3456:38;3453:161;;3536:10;3531:3;3527:20;3524:1;3517:31;3571:4;3568:1;3561:15;3599:4;3596:1;3589:15;3453:161;;3240:380;;;:::o;3751:545::-;3853:2;3848:3;3845:11;3842:448;;;3889:1;3914:5;3910:2;3903:17;3959:4;3955:2;3945:19;4029:2;4017:10;4013:19;4010:1;4006:27;4000:4;3996:38;4065:4;4053:10;4050:20;4047:47;;;-1:-1:-1;4088:4:2;4047:47;4143:2;4138:3;4134:12;4131:1;4127:20;4121:4;4117:31;4107:41;;4198:82;4216:2;4209:5;4206:13;4198:82;;;4261:17;;;4242:1;4231:13;4198:82;;;4202:3;;;3842:448;3751:545;;;:::o;4472:1352::-;4598:3;4592:10;4625:18;4617:6;4614:30;4611:56;;;4647:18;;:::i;:::-;4676:97;4766:6;4726:38;4758:4;4752:11;4726:38;:::i;:::-;4720:4;4676:97;:::i;:::-;4828:4;;4892:2;4881:14;;4909:1;4904:663;;;;5611:1;5628:6;5625:89;;;-1:-1:-1;5680:19:2;;;5674:26;5625:89;-1:-1:-1;;4429:1:2;4425:11;;;4421:24;4417:29;4407:40;4453:1;4449:11;;;4404:57;5727:81;;4874:944;;4904:663;3698:1;3691:14;;;3735:4;3722:18;;-1:-1:-1;;4940:20:2;;;5058:236;5072:7;5069:1;5066:14;5058:236;;;5161:19;;;5155:26;5140:42;;5253:27;;;;5221:1;5209:14;;;;5088:19;;5058:236;;;5062:3;5322:6;5313:7;5310:19;5307:201;;;5383:19;;;5377:26;-1:-1:-1;;5466:1:2;5462:14;;;5478:3;5458:24;5454:37;5450:42;5435:58;5420:74;;5307:201;-1:-1:-1;;;;;5554:1:2;5538:14;;;5534:22;5521:36;;-1:-1:-1;4472:1352:2:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    131,
    1031
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1A0500 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2842D79 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xFC0D1B84 EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x34B JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x375 JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x166 SWAP1 PUSH2 0x526 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x192 SWAP1 PUSH2 0x526 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x2BA SWAP1 DUP3 PUSH2 0x5AF JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x367 DUP4 PUSH2 0x32F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 DUP3 PUSH2 0x32F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CD JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP4 ADD PUSH2 0x3B1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP8 ADD ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x439 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x414 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0x445 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x53A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x55A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x587 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x593 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C9 JUMPI PUSH2 0x5C9 PUSH2 0x445 JUMP JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x5D7 DUP5 SLOAD PUSH2 0x526 JUMP JUMPDEST DUP5 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x612 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5FA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x641 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x622 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x65F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF ISZERO ADDRESS PUSH21 0x37B93291186312FBD808E09ABCD82A2034D5579100 0xA6 MSTORE 0xB8 PUSH1 0x38 SGT XOR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5D1A0500"
    },
    "38": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6F77926B"
    },
    "49": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE2842D79"
    },
    "60": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F"
    },
    "64": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFC0D1B84"
    },
    "71": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4"
    },
    "75": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "DUP1",
      "path": "1"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        131,
        1031
      ],
      "op": "REVERT",
      "path": "1"
    },
    "81": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "82": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "85": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F"
    },
    "88": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "89": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "91": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34B"
    },
    "94": {
      "fn": "Users.updateEnergy",
      "jump": "i",
      "offset": [
        883,
        1029
      ],
      "op": "JUMP",
      "path": "1"
    },
    "95": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "96": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7"
    },
    "99": {
      "fn": "Users.updateEnergy",
      "jump": "i",
      "offset": [
        883,
        1029
      ],
      "op": "JUMP",
      "path": "1"
    },
    "100": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "101": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "STOP",
      "path": "1"
    },
    "102": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79"
    },
    "106": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74"
    },
    "109": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "110": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "112": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x375"
    },
    "115": {
      "fn": "Users.getUser",
      "jump": "i",
      "offset": [
        741,
        877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "116": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "117": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB"
    },
    "120": {
      "fn": "Users.getUser",
      "jump": "i",
      "offset": [
        741,
        877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "121": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "122": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "124": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "125": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86"
    },
    "128": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "129": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "130": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x397"
    },
    "133": {
      "fn": "Users.getUser",
      "jump": "i",
      "offset": [
        741,
        877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "134": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "135": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "137": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "138": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "140": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SUB",
      "path": "1"
    },
    "141": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "142": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "RETURN",
      "path": "1"
    },
    "143": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "144": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "147": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F9"
    },
    "150": {
      "fn": "Users.getAllUsers",
      "jump": "i",
      "offset": [
        643,
        735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "151": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "154": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "155": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86"
    },
    "158": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "159": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "160": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F8"
    },
    "163": {
      "fn": "Users.getAllUsers",
      "jump": "i",
      "offset": [
        643,
        735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "164": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "165": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "168": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2"
    },
    "171": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "172": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "174": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45B"
    },
    "177": {
      "fn": "Users.register",
      "jump": "i",
      "offset": [
        378,
        637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "178": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "179": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25B"
    },
    "182": {
      "fn": "Users.register",
      "jump": "i",
      "offset": [
        378,
        637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "183": {
      "fn": "Users.updateEnergy",
      "offset": [
        883,
        1029
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "190": {
      "op": "SHL"
    },
    "191": {
      "op": "SUB"
    },
    "192": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 0
    },
    "193": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "194": {
      "fn": "Users.isRegistered",
      "offset": [
        329,
        333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "196": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "197": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP2",
      "path": "1"
    },
    "198": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "199": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        360
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "201": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "203": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "204": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "206": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "207": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "208": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "209": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "211": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "212": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0xDC"
    },
    "215": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "216": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "218": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "DUP1",
      "path": "1"
    },
    "219": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "REVERT",
      "path": "1"
    },
    "220": {
      "fn": "Users.updateEnergy",
      "offset": [
        953,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "227": {
      "op": "SHL"
    },
    "228": {
      "op": "SUB"
    },
    "229": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 2
    },
    "230": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "231": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "AND",
      "path": "1"
    },
    "232": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "234": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "235": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "DUP2",
      "path": "1"
    },
    "236": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "237": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "239": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "DUP2",
      "path": "1"
    },
    "240": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "241": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "242": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "244": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "245": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        999
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "246": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        1013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "248": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        1013
      ],
      "op": "ADD",
      "path": "1"
    },
    "249": {
      "fn": "Users.updateEnergy",
      "offset": [
        989,
        1022
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "250": {
      "fn": "Users.updateEnergy",
      "jump": "o",
      "offset": [
        883,
        1029
      ],
      "op": "JUMP",
      "path": "1"
    },
    "251": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "254": {
      "op": "DUP1"
    },
    "255": {
      "op": "MLOAD"
    },
    "256": {
      "op": "DUP1"
    },
    "257": {
      "op": "DUP3"
    },
    "258": {
      "op": "ADD"
    },
    "259": {
      "op": "SWAP1"
    },
    "260": {
      "op": "SWAP2"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "264": {
      "op": "DUP2"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "op": "DUP3"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "op": "MSTORE"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP3",
      "path": "1"
    },
    "282": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "283": {
      "fn": "Users.isRegistered",
      "offset": [
        329,
        333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "285": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "286": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP2",
      "path": "1"
    },
    "287": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "288": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        360
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "290": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "292": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "293": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "296": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "297": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "298": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "300": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "301": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 3,
      "value": "0x135"
    },
    "304": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "305": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "307": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "DUP1",
      "path": "1"
    },
    "308": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "REVERT",
      "path": "1"
    },
    "309": {
      "fn": "Users.getUser",
      "offset": [
        817,
        843
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 4
    },
    "319": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "AND",
      "path": "1"
    },
    "320": {
      "fn": "Users.getUser",
      "offset": [
        860,
        865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "322": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "323": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "324": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "325": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "327": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "328": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "329": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "330": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "332": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "333": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "334": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "335": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "336": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "337": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "338": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "339": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "340": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "341": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "342": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "343": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "344": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "345": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "346": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "347": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "348": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "349": {
      "fn": "Users.getUser",
      "offset": [
        860,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "350": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166"
    },
    "353": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "354": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x526"
    },
    "357": {
      "fn": "Users.getUser",
      "jump": "i",
      "offset": [
        853,
        870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "358": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "359": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "360": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "362": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "363": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "365": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "366": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "367": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DIV",
      "path": "1"
    },
    "368": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MUL",
      "path": "1"
    },
    "369": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "371": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "372": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "374": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "375": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "376": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "377": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "378": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "380": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "381": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "382": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "383": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "384": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "385": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "386": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "387": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "388": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "390": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "391": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "392": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "393": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "394": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x192"
    },
    "397": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "398": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x526"
    },
    "401": {
      "fn": "Users.getUser",
      "jump": "i",
      "offset": [
        853,
        870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "402": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "403": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "404": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "405": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "408": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "409": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "410": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "412": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "LT",
      "path": "1"
    },
    "413": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B4"
    },
    "416": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "417": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "420": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "421": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "422": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "423": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DIV",
      "path": "1"
    },
    "424": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MUL",
      "path": "1"
    },
    "425": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "426": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "427": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "428": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "430": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "431": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "432": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "435": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "436": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "437": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "438": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "439": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "440": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "441": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "443": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "444": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "446": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "448": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "449": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "450": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "451": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "452": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "453": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "454": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "455": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "456": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "458": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "459": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "460": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "462": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "463": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "464": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "465": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "GT",
      "path": "1"
    },
    "466": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C2"
    },
    "469": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "470": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "471": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "472": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SUB",
      "path": "1"
    },
    "473": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "475": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "AND",
      "path": "1"
    },
    "476": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "477": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "478": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "479": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "480": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "481": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "482": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "483": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "484": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "485": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "486": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "487": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "489": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "490": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "492": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "493": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "494": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "495": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "496": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "497": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "498": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "499": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "500": {
      "fn": "Users.getUser",
      "offset": [
        853,
        870
      ],
      "op": "POP",
      "path": "1"
    },
    "501": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "502": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "503": {
      "fn": "Users.getUser",
      "offset": [
        741,
        877
      ],
      "op": "POP",
      "path": "1"
    },
    "504": {
      "fn": "Users.getUser",
      "jump": "o",
      "offset": [
        741,
        877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "505": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "506": {
      "fn": "Users.getAllUsers",
      "offset": [
        689,
        705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "508": {
      "fn": "Users.getAllUsers",
      "offset": [
        724,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x2"
    },
    "510": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "511": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "512": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "513": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "515": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MUL",
      "path": "1"
    },
    "516": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "518": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "519": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "521": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "522": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "523": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "524": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "525": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "527": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "528": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "529": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "530": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "531": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "532": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "533": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "534": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "535": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "537": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "538": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "539": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "540": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "541": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "542": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "543": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251"
    },
    "546": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "547": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "549": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MUL",
      "path": "1"
    },
    "550": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "551": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "552": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "553": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "554": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "556": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "557": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "559": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "561": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "562": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "563": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "564": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "565": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "AND",
      "path": "1"
    },
    "575": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "576": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "577": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "579": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "580": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "581": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "582": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "583": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "585": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "ADD",
      "path": "1"
    },
    "586": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "587": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "DUP4",
      "path": "1"
    },
    "588": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "GT",
      "path": "1"
    },
    "589": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x233"
    },
    "592": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "593": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "594": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "595": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "596": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "597": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "598": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "599": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "600": {
      "fn": "Users.getAllUsers",
      "offset": [
        717,
        728
      ],
      "op": "POP",
      "path": "1"
    },
    "601": {
      "fn": "Users.getAllUsers",
      "offset": [
        643,
        735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "602": {
      "fn": "Users.getAllUsers",
      "jump": "o",
      "offset": [
        643,
        735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "603": {
      "fn": "Users.register",
      "offset": [
        378,
        637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "SUB"
    },
    "612": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP4",
      "path": "1"
    },
    "613": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "614": {
      "fn": "Users.isRegistered",
      "offset": [
        329,
        333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "616": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "617": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "DUP2",
      "path": "1"
    },
    "618": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "619": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        360
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "621": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "623": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "624": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "626": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "627": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "628": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "629": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "631": {
      "fn": "Users.isRegistered",
      "offset": [
        352,
        365
      ],
      "op": "AND",
      "path": "1"
    },
    "632": {
      "branch": 10,
      "fn": "Users.register",
      "offset": [
        509,
        527
      ],
      "op": "ISZERO",
      "path": "1",
      "statement": 6
    },
    "633": {
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x281"
    },
    "636": {
      "branch": 10,
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "637": {
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "639": {
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "DUP1",
      "path": "1"
    },
    "640": {
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "REVERT",
      "path": "1"
    },
    "641": {
      "fn": "Users.register",
      "offset": [
        501,
        528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "642": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x40"
    },
    "644": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "645": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "646": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "647": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "648": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "649": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "650": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "651": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "652": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "653": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "654": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "658": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "659": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "DUP5",
      "path": "1"
    },
    "660": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "661": {
      "fn": "Users.register",
      "offset": [
        551,
        576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "DUP7",
      "path": "1"
    },
    "671": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "AND",
      "path": "1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "674": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "675": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "676": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "677": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "678": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "679": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "680": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "681": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "682": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "683": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "684": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "685": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "686": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "687": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "688": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA"
    },
    "692": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "693": {
      "fn": "Users.register",
      "offset": [
        538,
        548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "694": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AF"
    },
    "697": {
      "fn": "Users.register",
      "jump": "i",
      "offset": [
        538,
        576
      ],
      "op": "JUMP",
      "path": "1"
    },
    "698": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "699": {
      "op": "POP"
    },
    "700": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "702": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "703": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "704": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "705": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "706": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "708": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "709": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "710": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "ADD",
      "path": "1"
    },
    "711": {
      "fn": "Users.register",
      "offset": [
        538,
        576
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "op": "SUB"
    },
    "720": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 8
    },
    "721": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "722": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "AND",
      "path": "1"
    },
    "723": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "725": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "DUP2",
      "path": "1"
    },
    "726": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "DUP2",
      "path": "1"
    },
    "727": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "728": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "729": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "DUP6",
      "path": "1"
    },
    "730": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "731": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "732": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "734": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "DUP3",
      "path": "1"
    },
    "735": {
      "fn": "Users.register",
      "offset": [
        586,
        599
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "736": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "DUP1",
      "path": "1"
    },
    "737": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "740": {
      "op": "NOT"
    },
    "741": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "AND",
      "path": "1"
    },
    "742": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "DUP7",
      "path": "1"
    },
    "743": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "OR",
      "path": "1"
    },
    "744": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "745": {
      "fn": "Users.register",
      "offset": [
        586,
        606
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "746": {
      "fn": "Users.register",
      "offset": [
        616,
        620
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x2"
    },
    "748": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "749": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "750": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "751": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "DUP7",
      "path": "1"
    },
    "752": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "ADD",
      "path": "1"
    },
    "753": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "DUP2",
      "path": "1"
    },
    "754": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "755": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "756": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "757": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "758": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "791": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "792": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "793": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "ADD",
      "path": "1"
    },
    "794": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "795": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "op": "NOT"
    },
    "805": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "AND",
      "path": "1"
    },
    "806": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "807": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "808": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "OR",
      "path": "1"
    },
    "809": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "810": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "811": {
      "fn": "Users.register",
      "offset": [
        616,
        630
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "fn": "Users.register",
      "jump": "o",
      "offset": [
        378,
        637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "op": "DUP1"
    },
    "817": {
      "op": "CALLDATALOAD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "op": "SUB"
    },
    "826": {
      "op": "DUP2"
    },
    "827": {
      "op": "AND"
    },
    "828": {
      "op": "DUP2"
    },
    "829": {
      "op": "EQ"
    },
    "830": {
      "op": "PUSH2",
      "value": "0x346"
    },
    "833": {
      "op": "JUMPI"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "REVERT"
    },
    "838": {
      "op": "JUMPDEST"
    },
    "839": {
      "op": "SWAP2"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "jump": "o",
      "op": "JUMP"
    },
    "843": {
      "op": "JUMPDEST"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "846": {
      "op": "DUP1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "849": {
      "op": "DUP4"
    },
    "850": {
      "op": "DUP6"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "op": "SLT"
    },
    "853": {
      "op": "ISZERO"
    },
    "854": {
      "op": "PUSH2",
      "value": "0x35E"
    },
    "857": {
      "op": "JUMPI"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "860": {
      "op": "DUP1"
    },
    "861": {
      "op": "REVERT"
    },
    "862": {
      "op": "JUMPDEST"
    },
    "863": {
      "op": "PUSH2",
      "value": "0x367"
    },
    "866": {
      "op": "DUP4"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "870": {
      "jump": "i",
      "op": "JUMP"
    },
    "871": {
      "op": "JUMPDEST"
    },
    "872": {
      "op": "SWAP5"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "SWAP4"
    },
    "876": {
      "op": "SWAP1"
    },
    "877": {
      "op": "SWAP4"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "op": "CALLDATALOAD"
    },
    "880": {
      "op": "SWAP4"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "op": "POP"
    },
    "884": {
      "jump": "o",
      "op": "JUMP"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "DUP5"
    },
    "892": {
      "op": "SUB"
    },
    "893": {
      "op": "SLT"
    },
    "894": {
      "op": "ISZERO"
    },
    "895": {
      "op": "PUSH2",
      "value": "0x387"
    },
    "898": {
      "op": "JUMPI"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "901": {
      "op": "DUP1"
    },
    "902": {
      "op": "REVERT"
    },
    "903": {
      "op": "JUMPDEST"
    },
    "904": {
      "op": "PUSH2",
      "value": "0x390"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "911": {
      "jump": "i",
      "op": "JUMP"
    },
    "912": {
      "op": "JUMPDEST"
    },
    "913": {
      "op": "SWAP4"
    },
    "914": {
      "op": "SWAP3"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "jump": "o",
      "op": "JUMP"
    },
    "919": {
      "op": "JUMPDEST"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "924": {
      "op": "DUP1"
    },
    "925": {
      "op": "DUP4"
    },
    "926": {
      "op": "MSTORE"
    },
    "927": {
      "op": "DUP4"
    },
    "928": {
      "op": "MLOAD"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "DUP1"
    },
    "936": {
      "op": "MLOAD"
    },
    "937": {
      "op": "DUP1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "940": {
      "op": "DUP7"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "945": {
      "op": "JUMPDEST"
    },
    "946": {
      "op": "DUP2"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "LT"
    },
    "949": {
      "op": "ISZERO"
    },
    "950": {
      "op": "PUSH2",
      "value": "0x3CD"
    },
    "953": {
      "op": "JUMPI"
    },
    "954": {
      "op": "DUP3"
    },
    "955": {
      "op": "DUP2"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "DUP5"
    },
    "958": {
      "op": "ADD"
    },
    "959": {
      "op": "MLOAD"
    },
    "960": {
      "op": "DUP7"
    },
    "961": {
      "op": "DUP3"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "DUP4"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "op": "PUSH2",
      "value": "0x3B1"
    },
    "972": {
      "op": "JUMP"
    },
    "973": {
      "op": "JUMPDEST"
    },
    "974": {
      "op": "POP"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "DUP8"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "DUP3"
    },
    "985": {
      "op": "DUP7"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "MLOAD"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "990": {
      "op": "DUP7"
    },
    "991": {
      "op": "ADD"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "997": {
      "op": "NOT"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1000": {
      "op": "DUP4"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "AND"
    },
    "1003": {
      "op": "DUP7"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "op": "SWAP4"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "op": "SWAP3"
    },
    "1012": {
      "op": "SWAP2"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "jump": "o",
      "op": "JUMP"
    },
    "1016": {
      "op": "JUMPDEST"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1019": {
      "op": "DUP1"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "MLOAD"
    },
    "1024": {
      "op": "DUP3"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "op": "DUP2"
    },
    "1028": {
      "op": "SWAP1"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1032": {
      "op": "SWAP2"
    },
    "1033": {
      "op": "SWAP1"
    },
    "1034": {
      "op": "DUP5"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1040": {
      "op": "DUP6"
    },
    "1041": {
      "op": "ADD"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "DUP5"
    },
    "1044": {
      "op": "JUMPDEST"
    },
    "1045": {
      "op": "DUP2"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "LT"
    },
    "1048": {
      "op": "ISZERO"
    },
    "1049": {
      "op": "PUSH2",
      "value": "0x439"
    },
    "1052": {
      "op": "JUMPI"
    },
    "1053": {
      "op": "DUP4"
    },
    "1054": {
      "op": "MLOAD"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "op": "AND"
    },
    "1064": {
      "op": "DUP4"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "SWAP3"
    },
    "1067": {
      "op": "DUP5"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "op": "SWAP3"
    },
    "1070": {
      "op": "SWAP2"
    },
    "1071": {
      "op": "DUP5"
    },
    "1072": {
      "op": "ADD"
    },
    "1073": {
      "op": "SWAP2"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "PUSH2",
      "value": "0x414"
    },
    "1080": {
      "op": "JUMP"
    },
    "1081": {
      "op": "JUMPDEST"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "SWAP1"
    },
    "1084": {
      "op": "SWAP7"
    },
    "1085": {
      "op": "SWAP6"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "jump": "o",
      "op": "JUMP"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1114": {
      "op": "REVERT"
    },
    "1115": {
      "op": "JUMPDEST"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1118": {
      "op": "DUP1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1123": {
      "op": "DUP5"
    },
    "1124": {
      "op": "DUP7"
    },
    "1125": {
      "op": "SUB"
    },
    "1126": {
      "op": "SLT"
    },
    "1127": {
      "op": "ISZERO"
    },
    "1128": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1131": {
      "op": "JUMPI"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1134": {
      "op": "DUP1"
    },
    "1135": {
      "op": "REVERT"
    },
    "1136": {
      "op": "JUMPDEST"
    },
    "1137": {
      "op": "PUSH2",
      "value": "0x479"
    },
    "1140": {
      "op": "DUP5"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "1144": {
      "jump": "i",
      "op": "JUMP"
    },
    "1145": {
      "op": "JUMPDEST"
    },
    "1146": {
      "op": "SWAP3"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1150": {
      "op": "DUP5"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "CALLDATALOAD"
    },
    "1153": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1162": {
      "op": "DUP1"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "GT"
    },
    "1165": {
      "op": "ISZERO"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x496"
    },
    "1169": {
      "op": "JUMPI"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1172": {
      "op": "DUP1"
    },
    "1173": {
      "op": "REVERT"
    },
    "1174": {
      "op": "JUMPDEST"
    },
    "1175": {
      "op": "DUP2"
    },
    "1176": {
      "op": "DUP7"
    },
    "1177": {
      "op": "ADD"
    },
    "1178": {
      "op": "SWAP2"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "DUP7"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1183": {
      "op": "DUP4"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "SLT"
    },
    "1186": {
      "op": "PUSH2",
      "value": "0x4AA"
    },
    "1189": {
      "op": "JUMPI"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1192": {
      "op": "DUP1"
    },
    "1193": {
      "op": "REVERT"
    },
    "1194": {
      "op": "JUMPDEST"
    },
    "1195": {
      "op": "DUP2"
    },
    "1196": {
      "op": "CALLDATALOAD"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "DUP2"
    },
    "1199": {
      "op": "GT"
    },
    "1200": {
      "op": "ISZERO"
    },
    "1201": {
      "op": "PUSH2",
      "value": "0x4BC"
    },
    "1204": {
      "op": "JUMPI"
    },
    "1205": {
      "op": "PUSH2",
      "value": "0x4BC"
    },
    "1208": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1211": {
      "jump": "i",
      "op": "JUMP"
    },
    "1212": {
      "op": "JUMPDEST"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1215": {
      "op": "MLOAD"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1218": {
      "op": "DUP3"
    },
    "1219": {
      "op": "ADD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1222": {
      "op": "NOT"
    },
    "1223": {
      "op": "SWAP1"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "AND"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "AND"
    },
    "1230": {
      "op": "DUP2"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "DUP4"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "GT"
    },
    "1236": {
      "op": "DUP2"
    },
    "1237": {
      "op": "DUP4"
    },
    "1238": {
      "op": "LT"
    },
    "1239": {
      "op": "OR"
    },
    "1240": {
      "op": "ISZERO"
    },
    "1241": {
      "op": "PUSH2",
      "value": "0x4E4"
    },
    "1244": {
      "op": "JUMPI"
    },
    "1245": {
      "op": "PUSH2",
      "value": "0x4E4"
    },
    "1248": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1251": {
      "jump": "i",
      "op": "JUMP"
    },
    "1252": {
      "op": "JUMPDEST"
    },
    "1253": {
      "op": "DUP2"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "DUP3"
    },
    "1258": {
      "op": "DUP2"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "op": "DUP10"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1263": {
      "op": "DUP5"
    },
    "1264": {
      "op": "DUP8"
    },
    "1265": {
      "op": "ADD"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "GT"
    },
    "1268": {
      "op": "ISZERO"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1272": {
      "op": "JUMPI"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "REVERT"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "DUP3"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1281": {
      "op": "DUP7"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1285": {
      "op": "DUP4"
    },
    "1286": {
      "op": "ADD"
    },
    "1287": {
      "op": "CALLDATACOPY"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1292": {
      "op": "DUP5"
    },
    "1293": {
      "op": "DUP4"
    },
    "1294": {
      "op": "ADD"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "op": "MSTORE"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "SWAP7"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "op": "POP"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1307": {
      "op": "DUP5"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "CALLDATALOAD"
    },
    "1310": {
      "op": "SWAP1"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "op": "SWAP3"
    },
    "1313": {
      "op": "POP"
    },
    "1314": {
      "op": "SWAP3"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "op": "SWAP3"
    },
    "1317": {
      "jump": "o",
      "op": "JUMP"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "DUP2"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "SHR"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "AND"
    },
    "1327": {
      "op": "DUP1"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1331": {
      "op": "JUMPI"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "AND"
    },
    "1336": {
      "op": "SWAP2"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "LT"
    },
    "1343": {
      "op": "DUP2"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x55A"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1364": {
      "op": "MSTORE"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1369": {
      "op": "REVERT"
    },
    "1370": {
      "op": "JUMPDEST"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "SWAP2"
    },
    "1373": {
      "op": "SWAP1"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "jump": "o",
      "op": "JUMP"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "GT"
    },
    "1381": {
      "op": "ISZERO"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x5AA"
    },
    "1385": {
      "op": "JUMPI"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1388": {
      "op": "DUP2"
    },
    "1389": {
      "op": "DUP2"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1393": {
      "op": "DUP2"
    },
    "1394": {
      "op": "KECCAK256"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1397": {
      "op": "DUP6"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1401": {
      "op": "SHR"
    },
    "1402": {
      "op": "DUP2"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1406": {
      "op": "DUP7"
    },
    "1407": {
      "op": "LT"
    },
    "1408": {
      "op": "ISZERO"
    },
    "1409": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1412": {
      "op": "JUMPI"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "DUP1"
    },
    "1415": {
      "op": "JUMPDEST"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1418": {
      "op": "DUP6"
    },
    "1419": {
      "op": "ADD"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1422": {
      "op": "SHR"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "SWAP2"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "JUMPDEST"
    },
    "1428": {
      "op": "DUP2"
    },
    "1429": {
      "op": "DUP2"
    },
    "1430": {
      "op": "LT"
    },
    "1431": {
      "op": "ISZERO"
    },
    "1432": {
      "op": "PUSH2",
      "value": "0x5A6"
    },
    "1435": {
      "op": "JUMPI"
    },
    "1436": {
      "op": "DUP3"
    },
    "1437": {
      "op": "DUP2"
    },
    "1438": {
      "op": "SSTORE"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "ADD"
    },
    "1442": {
      "op": "PUSH2",
      "value": "0x593"
    },
    "1445": {
      "op": "JUMP"
    },
    "1446": {
      "op": "JUMPDEST"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "jump": "o",
      "op": "JUMP"
    },
    "1455": {
      "op": "JUMPDEST"
    },
    "1456": {
      "op": "DUP2"
    },
    "1457": {
      "op": "MLOAD"
    },
    "1458": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1467": {
      "op": "DUP2"
    },
    "1468": {
      "op": "GT"
    },
    "1469": {
      "op": "ISZERO"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1473": {
      "op": "JUMPI"
    },
    "1474": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1477": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1480": {
      "jump": "i",
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1485": {
      "op": "DUP2"
    },
    "1486": {
      "op": "PUSH2",
      "value": "0x5D7"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "SLOAD"
    },
    "1491": {
      "op": "PUSH2",
      "value": "0x526"
    },
    "1494": {
      "jump": "i",
      "op": "JUMP"
    },
    "1495": {
      "op": "JUMPDEST"
    },
    "1496": {
      "op": "DUP5"
    },
    "1497": {
      "op": "PUSH2",
      "value": "0x560"
    },
    "1500": {
      "jump": "i",
      "op": "JUMP"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1504": {
      "op": "DUP1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1507": {
      "op": "DUP4"
    },
    "1508": {
      "op": "GT"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "DUP2"
    },
    "1512": {
      "op": "EQ"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0x612"
    },
    "1516": {
      "op": "JUMPI"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1519": {
      "op": "DUP5"
    },
    "1520": {
      "op": "ISZERO"
    },
    "1521": {
      "op": "PUSH2",
      "value": "0x5FA"
    },
    "1524": {
      "op": "JUMPI"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "op": "DUP6"
    },
    "1527": {
      "op": "DUP4"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "MLOAD"
    },
    "1530": {
      "op": "JUMPDEST"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1533": {
      "op": "NOT"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1536": {
      "op": "DUP7"
    },
    "1537": {
      "op": "SWAP1"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "SHR"
    },
    "1540": {
      "op": "NOT"
    },
    "1541": {
      "op": "AND"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "DUP6"
    },
    "1545": {
      "op": "SWAP1"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "op": "OR"
    },
    "1548": {
      "op": "DUP6"
    },
    "1549": {
      "op": "SSTORE"
    },
    "1550": {
      "op": "PUSH2",
      "value": "0x5A6"
    },
    "1553": {
      "op": "JUMP"
    },
    "1554": {
      "op": "JUMPDEST"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1557": {
      "op": "DUP6"
    },
    "1558": {
      "op": "DUP2"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "KECCAK256"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1566": {
      "op": "NOT"
    },
    "1567": {
      "op": "DUP7"
    },
    "1568": {
      "op": "AND"
    },
    "1569": {
      "op": "SWAP2"
    },
    "1570": {
      "op": "JUMPDEST"
    },
    "1571": {
      "op": "DUP3"
    },
    "1572": {
      "op": "DUP2"
    },
    "1573": {
      "op": "LT"
    },
    "1574": {
      "op": "ISZERO"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x641"
    },
    "1578": {
      "op": "JUMPI"
    },
    "1579": {
      "op": "DUP9"
    },
    "1580": {
      "op": "DUP7"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "MLOAD"
    },
    "1583": {
      "op": "DUP3"
    },
    "1584": {
      "op": "SSTORE"
    },
    "1585": {
      "op": "SWAP5"
    },
    "1586": {
      "op": "DUP5"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "op": "SWAP5"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "SWAP1"
    },
    "1592": {
      "op": "SWAP2"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "SWAP1"
    },
    "1595": {
      "op": "DUP5"
    },
    "1596": {
      "op": "ADD"
    },
    "1597": {
      "op": "PUSH2",
      "value": "0x622"
    },
    "1600": {
      "op": "JUMP"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "op": "DUP6"
    },
    "1604": {
      "op": "DUP3"
    },
    "1605": {
      "op": "LT"
    },
    "1606": {
      "op": "ISZERO"
    },
    "1607": {
      "op": "PUSH2",
      "value": "0x65F"
    },
    "1610": {
      "op": "JUMPI"
    },
    "1611": {
      "op": "DUP8"
    },
    "1612": {
      "op": "DUP6"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "op": "MLOAD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1617": {
      "op": "NOT"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1620": {
      "op": "DUP9"
    },
    "1621": {
      "op": "SWAP1"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1625": {
      "op": "AND"
    },
    "1626": {
      "op": "SHR"
    },
    "1627": {
      "op": "NOT"
    },
    "1628": {
      "op": "AND"
    },
    "1629": {
      "op": "DUP2"
    },
    "1630": {
      "op": "SSTORE"
    },
    "1631": {
      "op": "JUMPDEST"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "SWAP1"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "SWAP1"
    },
    "1644": {
      "op": "SSTORE"
    },
    "1645": {
      "op": "POP"
    },
    "1646": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c963a4510381e15ad1211b6cb9a0cf6a6190469a",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nstruct User {\n    string name;\n    uint256 energy_amount;\n}\n\ncontract Users {\n    mapping(address => User) private users;\n    mapping(address => bool) private inserted;\n    address[] private keys;\n\n    function isRegistered(address uid) private view returns (bool) {\n        return inserted[uid];\n    }\n\n    function register(\n        address uid,\n        string memory name,\n        uint256 energy_amount\n    ) external {\n        require(!isRegistered(uid));\n        users[uid] = User(name, energy_amount);\n        inserted[uid] = true;\n        keys.push(uid);\n    }\n\n    function getAllUsers() external view returns (address[] memory) {\n        return keys;\n    }\n\n    function getUser(address uid) external view returns (User memory) {\n        require(isRegistered(uid));\n        return users[uid];\n    }\n\n    function updateEnergy(address uid, uint256 amount) external {\n        require(isRegistered(uid));\n        users[uid].energy_amount = amount;\n    }\n}\n",
  "sourceMap": "131:900:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Users.sol",
  "type": "contract"
}